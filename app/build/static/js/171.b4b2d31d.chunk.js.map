{"version":3,"file":"static/js/171.b4b2d31d.chunk.js","mappings":"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","sources":["components/PlayDownload.jsx","components/SermonSearchModal.jsx","components/SelectedSermon.jsx"],"sourcesContent":["import { useState, useContext, useRef } from \"react\";\r\nimport { SermonContext } from \"../Logic/SermonProvider\";\r\nimport { Play, Download, ArrowLeft } from \"lucide-react\";\r\n\r\nconst DownloadSermon = () => {\r\n  const { selectedMessage, setActiveTab } = useContext(SermonContext);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const audioRef = useRef(null);\r\n\r\n  const downloadUrl =\r\n    selectedMessage.type === \"mp3\" && selectedMessage.downloadLink;\r\n  const audioUrl = selectedMessage.type === \"mp3\" && selectedMessage.audioUrl;\r\n\r\n  const togglePlayPause = () => {\r\n    if (audioUrl) {\r\n      setIsLoading(true);\r\n      window.open(audioUrl, \"_blank\");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    if (audioUrl) {\r\n      setIsLoading(true);\r\n      window.open(audioUrl, \"_blank\");\r\n      setIsLoading(false);\r\n    } else {\r\n      alert(\"Download link not available\");\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveTab(\"sermons\"); // Assuming 'list' is the identifier for the sermon list tab\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen  p-5\">\r\n      <div className=\"w-full max-w-lg\">\r\n        <button\r\n          onClick={handleBack}\r\n          className=\"flex items-center text-white mb-4 hover:text-gray-300\"\r\n        >\r\n          <ArrowLeft size={24} />\r\n          <span className=\"ml-2\">Back to Sermon List</span>\r\n        </button>\r\n\r\n        <h1 className=\"text-white text-3xl mb-4\">Sermon Audio</h1>\r\n        <h2 className=\"text-gray-400 text-xl mb-8 text-center\">\r\n          {selectedMessage.title}\r\n        </h2>\r\n\r\n        <button\r\n          onClick={togglePlayPause}\r\n          className=\"flex items-center justify-center bg-primary text-white text-lg py-4 px-6 rounded-full mb-6 w-full hover:bg-secondary disabled:opacity-50\"\r\n          disabled={!audioUrl}\r\n        >\r\n          {<Play size={32} />}\r\n          <span className=\"ml-2\">{\"Play\"}</span>\r\n        </button>\r\n\r\n        <button\r\n          onClick={handleDownload}\r\n          className=\"flex items-center justify-center bg-primary text-white text-lg py-4 px-6 rounded-full mb-6 w-full hover:bg-secondary disabled:opacity-50\"\r\n          disabled={isLoading || !downloadUrl}\r\n        >\r\n          {isLoading ? (\r\n            <div>Opening...</div>\r\n          ) : (\r\n            <>\r\n              <Download size={32} />\r\n              <span className=\"ml-2\">Download</span>\r\n            </>\r\n          )}\r\n        </button>\r\n\r\n        {/* Audio Player */}\r\n        {audioUrl && (\r\n          <audio ref={audioRef} src={audioUrl} className=\"w-full\" controls>\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownloadSermon;\r\n","import PropTypes from 'prop-types';\r\nimport { Search,X } from 'lucide-react';\r\nimport { useState,useEffect, useRef } from 'react';\r\n\r\nconst SearchModal = ({ showSearch, onClose, onSearch, searchQuery }) => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const searchInputRef = useRef(null);\r\n  \r\n    useEffect(() => {\r\n      if (showSearch && searchInputRef.current) {\r\n        searchInputRef.current.focus();\r\n      }\r\n    }, [showSearch]);\r\n  \r\n    const handleKeyDown = (e) => {\r\n      if (e.key === \"Enter\") {\r\n        onSearch(searchValue);\r\n      } else if (e.key === \"Escape\") {\r\n        onClose();\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div\r\n        className={`fixed inset-0 bg-black bg-opacity-50 transition-opacity duration-300 ${\r\n          showSearch ? \"opacity-100 z-50\" : \"opacity-0 pointer-events-none\"\r\n        }`}\r\n      >\r\n        <div className=\"flex items-start justify-center pt-16\">\r\n          <div\r\n            className={`bg-[#202425] rounded-lg p-4 w-full max-w-2xl mx-4 transform transition-transform duration-300 ${\r\n              showSearch ? \"translate-y-0\" : \"-translate-y-full\"\r\n            }`}\r\n          >\r\n            <div className=\"flex items-center gap-4\">\r\n              <Search className=\"text-gray-400\" size={20} />\r\n              <input\r\n                ref={searchInputRef}\r\n                type=\"text\"\r\n                value={searchValue}\r\n                onChange={(e) => setSearchValue(e.target.value)}\r\n                onKeyDown={handleKeyDown}\r\n                placeholder=\"Search in sermon...\"\r\n                className=\"flex-1 bg-transparent border-none outline-none text-white placeholder-gray-400 text-lg\"\r\n              />\r\n              <button\r\n                onClick={() => onSearch(searchValue)}\r\n                className=\"p-2 bg-gray-800 rounded-full text-text transition-colors italic\"\r\n              >\r\n                Go\r\n              </button>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"p-2 hover:bg-gray-800 rounded-full transition-colors\"\r\n              >\r\n                <X className=\"text-gray-400\" size={20} />\r\n              </button>\r\n            </div>\r\n            {searchQuery && (\r\n              <div className=\"mt-2 text-sm text-gray-400\">\r\n                Press Enter to jump to matches\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  SearchModal.propTypes = {\r\n    showSearch: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onSearch: PropTypes.func.isRequired,\r\n    searchQuery: PropTypes.string,\r\n  };\r\n\r\n  export default SearchModal;","import React, {\r\n  useContext,\r\n  useRef,\r\n  useEffect,\r\n  useState,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SermonContext } from \"../Logic/SermonProvider\";\r\nimport { Card, Button } from \"antd\";\r\nimport DownloadSermon from \"./PlayDownload\";\r\nimport { ImageIcon, Search, X, Info } from \"lucide-react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport SearchModal from \"./SermonSearchModal\";\r\nimport DarkModeToggle from \"./ThemeSwitcher\";\r\n\r\n\r\nconst SermonDetailsCard = ({ sermon }) => {\r\n  return (\r\n    <Card\r\n      className=\"absolute right-0 mr-14 mt-24 bg-primary text-white w-64 shadow-lg\"\r\n      bordered={false}\r\n    >\r\n      <h3 className=\"text-lg font-bold mb-2\">{sermon.title}</h3>\r\n      <div className=\"text-sm space-y-2\">\r\n        <p>\r\n          <span className=\"font-medium\">Location:</span> {sermon.location}\r\n        </p>\r\n        <p>\r\n          <span className=\"font-medium\">Year:</span> {sermon.year || \"N/A\"}\r\n        </p>\r\n        <p>\r\n          <span className=\"font-medium\">Type:</span> {sermon.type}\r\n        </p>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst SaveNotification = ({ show, onClose }) => {\r\n  useEffect(() => {\r\n    if (show) {\r\n      const timer = setTimeout(onClose, 2000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [show, onClose]);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {show && (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 50 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          exit={{ opacity: 0, y: 50 }}\r\n          className=\"absolute z-30 bottom-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg\"\r\n        >\r\n          Progress saved successfully! ✓\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nconst SelectedSermon = ({ background, setBackground }) => {\r\n  const {\r\n    selectedMessage,\r\n    searchQuery,\r\n    setSearchQuery,\r\n    settings,\r\n    setRecentSermons,\r\n  } = useContext(SermonContext);\r\n\r\n  const [showSearch, setShowSearch] = useState(false);\r\n  const [scrollPosition, setScrollPosition] = useState(\r\n    selectedMessage?.lastRead || 0\r\n  );\r\n  const scrollContainerRef = useRef(null);\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n  const [showLastReadCard, setShowLastReadCard] = useState(true);\r\n\r\n  const [showSaveNotification, setShowSaveNotification] = useState(false);\r\n  const [showDetailsCard, setShowDetailsCard] = useState(false);\r\n\r\n  const highlightEndnotes = (text) => {\r\n    const endnoteRegex = /Endnote/gi;\r\n    const parts = text.split(endnoteRegex);\r\n\r\n    return (\r\n      <span>\r\n        {parts.map((part, i, arr) =>\r\n          i < arr.length - 1 ? (\r\n            <React.Fragment key={i}>\r\n              {part}\r\n              <span className=\"bg-yellow-500 text-black px-1 rounded\" title=\"William branham qoute.🗝️🗝️ WMB qoute ends when you dont find the paragraph numbers anymore\">\r\n                Endnote\r\n              </span>\r\n            </React.Fragment>\r\n          ) : (\r\n            part\r\n          )\r\n        )}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const highlightText = useCallback((text, highlight) => {\r\n    if (!highlight?.trim()) return <span>{text}</span>;\r\n\r\n    const regex = new RegExp(`(${highlight})`, \"gi\");\r\n    const parts = text.split(regex);\r\n\r\n    return (\r\n      <span>\r\n        {parts.map((part, i) =>\r\n          regex.test(part) ? (\r\n            <mark\r\n              key={i}\r\n              className=\"text-green-400 border border-green-600 rounded-md\"\r\n              style={{\r\n                backgroundColor: \"green\",\r\n                padding: \"4px\",\r\n              }}\r\n            >\r\n              {part}\r\n            </mark>\r\n          ) : (\r\n            <span key={i}>{part}</span>\r\n          )\r\n        )}\r\n      </span>\r\n    );\r\n  }, []);\r\n\r\n  const images = useMemo(\r\n    () => [\"./pic1.jpg\", \"./picc.jpg\", \"./pica.jpg\", \"./picd.jpg\", \"./picb.jpg\"],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    const switchImage = () => {\r\n      const newIndex = Math.floor(Math.random() * images.length);\r\n      setCurrentImageIndex(newIndex);\r\n    };\r\n\r\n    const interval = setInterval(switchImage, 50000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [currentImageIndex, images]);\r\n\r\n  useEffect(() => {\r\n    if (searchQuery && scrollContainerRef.current) {\r\n      const highlights = scrollContainerRef.current.querySelectorAll(\"mark\");\r\n      if (highlights.length > 0) {\r\n        highlights[0].scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n      }\r\n    }\r\n\r\n    const timer = setTimeout(() => setSearchQuery(\"\"), 60000);\r\n    return () => clearTimeout(timer);\r\n  }, [searchQuery, setSearchQuery]);\r\n\r\n  // function to navigate to previous and next matches\r\n  \r\n\r\n\r\n  // Modified scroll handling logic\r\n  useEffect(() => {\r\n    const container = scrollContainerRef.current;\r\n    if (!container) return;\r\n\r\n    const handleScroll = () => {\r\n      setScrollPosition(container.scrollTop);\r\n    };\r\n\r\n    container.addEventListener(\"scroll\", handleScroll);\r\n    return () => container.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  // Save scroll position when unmounting or changing sermons\r\n  useEffect(() => {\r\n    if (!selectedMessage?.id) return;\r\n\r\n    const saveScrollPosition = () => {\r\n      const recentSermons =\r\n        JSON.parse(localStorage.getItem(\"recentSermons\")) || [];\r\n      const currentSermonIndex = recentSermons.findIndex(\r\n        (sermon) => sermon.id === selectedMessage.id\r\n      );\r\n\r\n      if (currentSermonIndex !== -1) {\r\n        const updatedSermons = [...recentSermons];\r\n        updatedSermons[currentSermonIndex] = {\r\n          ...selectedMessage,\r\n          lastRead: scrollPosition,\r\n        };\r\n        localStorage.setItem(\"recentSermons\", JSON.stringify(updatedSermons));\r\n        setRecentSermons(updatedSermons);\r\n      }\r\n    };\r\n\r\n    // Save position when component unmounts or sermon changes\r\n    return () => {\r\n      saveScrollPosition();\r\n    };\r\n  }, [selectedMessage, scrollPosition, setRecentSermons]);\r\n\r\n  const handleSearchToggle = () => {\r\n    setShowSearch(!showSearch);\r\n    if (showSearch) setSearchQuery(\"\");\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    setSearchQuery(value);\r\n    setShowSearch(false);\r\n  };\r\n\r\n  const backgroundStyle = background\r\n    ? {\r\n        backgroundImage: `linear-gradient(to bottom,\r\n          rgba(0, 0, 0, 0.5) 0%,\r\n          rgba(0, 0, 0, 5) 40%),\r\n          url(${images[currentImageIndex] || \"./pic3.jpg\"})`,\r\n      }\r\n    : {\r\n        // backgroundColor: \"#2c2c2c\",\r\n      };\r\n\r\n  const scrollToPosition = (height) => {\r\n    if (scrollContainerRef.current) {\r\n      scrollContainerRef.current.scrollTo({\r\n        top: height,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCloseLastReadCard = () => {\r\n    setShowLastReadCard(false);\r\n  };\r\n\r\n  // Add manual save function\r\n  const handleManualSave = () => {\r\n    if (!selectedMessage?.id) return;\r\n\r\n    const recentSermons =\r\n      JSON.parse(localStorage.getItem(\"recentSermons\")) || [];\r\n    const currentSermonIndex = recentSermons.findIndex(\r\n      (sermon) => sermon.id === selectedMessage.id\r\n    );\r\n\r\n    if (currentSermonIndex !== -1) {\r\n      const updatedSermons = [...recentSermons];\r\n      updatedSermons[currentSermonIndex] = {\r\n        ...selectedMessage,\r\n        lastRead: scrollPosition,\r\n      };\r\n      localStorage.setItem(\"recentSermons\", JSON.stringify(updatedSermons));\r\n      setRecentSermons(updatedSermons);\r\n    }\r\n    setShowSaveNotification(true);\r\n  };\r\n\r\n  const toggleDetailsCard = () => {\r\n    setShowDetailsCard((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <SearchModal\r\n        showSearch={showSearch}\r\n        onClose={handleSearchToggle}\r\n        onSearch={handleSearch}\r\n        searchQuery={searchQuery}\r\n      />\r\n\r\n      <SaveNotification\r\n        show={showSaveNotification}\r\n        onClose={() => setShowSaveNotification(false)}\r\n      />\r\n\r\n      <motion.div\r\n        className=\"bg-cover bg-white dark:bg-primary bg-center flex flex-col p-5 relative pb-14\"\r\n        style={\r\n          selectedMessage.type === \"text\"\r\n            ? backgroundStyle\r\n            : {\r\n                backgroundPosition: \"center\",\r\n                backgroundSize: \"contain\",\r\n                backgroundImage: `linear-gradient(to bottom,\r\n                rgba(42, 42, 42, 0.5) 80%,\r\n                rgba(42, 42, 42, .4) 90%),\r\n                url(\"./icon.png\")`,\r\n              }\r\n        }\r\n      >\r\n        <div className=\"w-full mb-5 h-[90vh] \">\r\n          {selectedMessage.type === \"text\" && (\r\n            <div className=\"absolute flex items-center justify-center right-0 mr-14 gap-2 p-2 rounded-l-full bg-primary mt-10\">\r\n              <button\r\n                className=\"rounded-full h-10 w-10 hover:cursor-pointer hover:scale-125 duration-300 bg-secondary text-white font-bold text-center flex items-center justify-center\"\r\n                title=\"Save progress\"\r\n                onClick={handleManualSave}\r\n              >\r\n                📝\r\n              </button>\r\n              <button\r\n                className=\"rounded-full h-10 w-10 hover:cursor-pointer hover:scale-125 duration-300 bg-secondary text-white font-bold text-center flex items-center justify-center\"\r\n                title=\"Toggle sermon details\"\r\n                onClick={toggleDetailsCard}\r\n              >\r\n                <Info size={20} />\r\n              </button>\r\n              <button\r\n                className=\"rounded-full h-10 w-10 hover:cursor-pointer hover:scale-125 duration-300 bg-secondary text-white font-bold text-center flex items-center justify-center\"\r\n                title=\"Toggle background\"\r\n                onClick={() => setBackground(!background)}\r\n              >\r\n                {background ? \"SB\" : <ImageIcon />}\r\n              </button>\r\n              <button\r\n                className=\"rounded-full h-10 w-10 hover:cursor-pointer hover:scale-125 duration-300 bg-secondary text-white font-bold text-center flex items-center justify-center\"\r\n                title=\"Search in sermon\"\r\n                onClick={handleSearchToggle}\r\n              >\r\n                <Search />\r\n              </button>\r\n              <DarkModeToggle/>\r\n            </div>\r\n          )}\r\n\r\n          {showDetailsCard && selectedMessage.type === \"text\" && (\r\n            <SermonDetailsCard sermon={selectedMessage} />\r\n          )}\r\n\r\n          <div\r\n            ref={scrollContainerRef}\r\n            className=\"rounded-lg p-8 h-[90vh] overflow-y-scroll text-text\"\r\n            style={{\r\n              scrollbarWidth: \"thin\",\r\n              scrollbarColor: \"#4B5563 #202020\",\r\n            }}\r\n          >\r\n            {selectedMessage.type === \"text\" ? (\r\n              <div className=\"w-full\">\r\n                {selectedMessage.lastRead && showLastReadCard && (\r\n                  <Card\r\n                    title=\"Welcome Back!\"\r\n                    bordered={false}\r\n                    className=\"absolute right-0 mr-14 mb-4 bg-green-300 text-text\"\r\n                    style={{ width: 300, textAlign: \"center\" }}\r\n                    actions={[\r\n                      <Button\r\n                        type=\"outline\"\r\n                        className=\"text-green-300 bg-green-700 \"\r\n                        onClick={() => {\r\n                          scrollToPosition(scrollPosition);\r\n                          setShowLastReadCard(false);\r\n                        }}\r\n                        key=\"continue\"\r\n                      >\r\n                        Continue\r\n                      </Button>,\r\n                      <Button\r\n                        type=\"outline\"\r\n                        onClick={handleCloseLastReadCard}\r\n                        key=\"close\"\r\n                        className=\"text-white bg-green-700 hover:text-gray-300\"\r\n                      >\r\n                        <X size={18} />\r\n                      </Button>,\r\n                    ]}\r\n                  >\r\n                    <p className=\"text-black\">\r\n                      You left off at this point in the sermon.\r\n                    </p>\r\n                  </Card>\r\n                )}\r\n                <p className=\" text-3xl font-serif text-gray-900 dark:text-text font-bold underline\">\r\n                  {selectedMessage.title}\r\n                </p>\r\n                <p className=\" font-serif italic text-gray-900 dark:text-text\">\r\n                  {selectedMessage?.location}\r\n                </p>\r\n                🔊\r\n                {selectedMessage.sermon\r\n                  ?.split(\"\\n\\n\") \r\n                  .map((paragraph, index) => (\r\n                    <p\r\n                      key={index}\r\n                      className=\"mb-6 leading-relaxed text-gray-900 dark:text-text font-cursive pt-3 \"\r\n                      style={{\r\n                        fontFamily: settings.fontFamily,\r\n                        fontWeight: settings.fontWeight,\r\n                        fontSize: `${settings.fontSize}px`,\r\n                        fontStyle: settings.fontStyle,\r\n                      }}\r\n                    >\r\n                      {searchQuery\r\n                        ? highlightText(paragraph, searchQuery)\r\n                        : highlightEndnotes(paragraph)}\r\n                    </p>\r\n                  ))}\r\n                🗝️\r\n              </div>\r\n            ) : (\r\n              <DownloadSermon />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectedSermon.propTypes = {\r\n  background: PropTypes.bool.isRequired,\r\n  setBackground: PropTypes.func.isRequired,\r\n};\r\n\r\nSearchModal.propTypes = {\r\n  showSearch: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSearch: PropTypes.func.isRequired,\r\n  searchQuery: PropTypes.string,\r\n};\r\n\r\nSaveNotification.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nSermonDetailsCard.propTypes = {\r\n  sermon: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default SelectedSermon;\r\n"],"names":["DownloadSermon","selectedMessage","setActiveTab","useContext","SermonContext","isLoading","setIsLoading","useState","audioRef","useRef","downloadUrl","type","downloadLink","audioUrl","_jsx","className","children","_jsxs","onClick","handleBack","ArrowLeft","size","title","togglePlayPause","window","open","disabled","Play","handleDownload","alert","_Fragment","Download","ref","src","controls","_ref","showSearch","onClose","onSearch","searchQuery","searchValue","setSearchValue","searchInputRef","useEffect","current","focus","concat","Search","value","onChange","e","target","onKeyDown","key","placeholder","X","SermonDetailsCard","sermon","Card","bordered","location","year","SaveNotification","_ref2","show","timer","setTimeout","clearTimeout","AnimatePresence","motion","div","initial","opacity","y","animate","exit","SearchModal","propTypes","PropTypes","isRequired","_ref3","_selectedMessage$serm","background","setBackground","setSearchQuery","settings","setRecentSermons","setShowSearch","scrollPosition","setScrollPosition","lastRead","scrollContainerRef","currentImageIndex","setCurrentImageIndex","showLastReadCard","setShowLastReadCard","showSaveNotification","setShowSaveNotification","showDetailsCard","setShowDetailsCard","highlightEndnotes","text","parts","split","map","part","i","arr","length","React","highlightText","useCallback","highlight","trim","regex","RegExp","test","style","backgroundColor","padding","images","useMemo","interval","setInterval","switchImage","newIndex","Math","floor","random","clearInterval","highlights","querySelectorAll","scrollIntoView","behavior","block","container","handleScroll","scrollTop","addEventListener","removeEventListener","id","saveScrollPosition","recentSermons","JSON","parse","localStorage","getItem","currentSermonIndex","findIndex","updatedSermons","_objectSpread","setItem","stringify","handleSearchToggle","backgroundStyle","backgroundImage","backgroundPosition","backgroundSize","handleManualSave","toggleDetailsCard","prev","Info","ImageIcon","DarkModeToggle","scrollbarWidth","scrollbarColor","width","textAlign","actions","Button","height","scrollTo","top","handleCloseLastReadCard","paragraph","index","fontFamily","fontWeight","fontSize","fontStyle"],"sourceRoot":""}