{"version":3,"file":"static/js/837.82a5e201.chunk.js","mappings":"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","sources":["components/Search.jsx","components/Allsermons.jsx"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { SermonContext } from \"../Logic/SermonProvider\";\r\nimport { Button } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { ChevronDown, ChevronUp } from \"lucide-react\";\r\nimport earlySermons from \"../sermons/1964-1969/firstset.js\";\r\nimport secondSet from \"../sermons/1970/1970\";\r\nimport thirdSet from \"../sermons/1971/1971\";\r\nimport fourthSet from \"../sermons/1972/1972\";\r\nimport lastSet from \"../sermons/1973/1973\";\r\n\r\nconst Search = () => {\r\n  const { setActiveTab, setSelectedMessage, setRecentSermons, setSearchQuery } =\r\n    useContext(SermonContext);\r\n  const [rightSearchText, setRightSearchText] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [expandedResults, setExpandedResults] = useState({});\r\n\r\n  const sermonCollection = [\r\n    ...earlySermons,\r\n    ...secondSet,\r\n    ...thirdSet,\r\n    ...fourthSet,\r\n    ...lastSet,\r\n  ];\r\n\r\n  const handleRightSearch = () => {\r\n    const filtered = sermonCollection\r\n      .map((sermon) => {\r\n        const regex = new RegExp(`(${rightSearchText})`, \"i\");\r\n        const match = sermon.sermon.match(regex);\r\n\r\n        if (match) {\r\n          // Get more context for the match\r\n          const preContext = sermon.sermon.slice(\r\n            Math.max(0, match.index - 200),\r\n            match.index\r\n          );\r\n          const postContext = sermon.sermon.slice(\r\n            match.index + match[0].length,\r\n            match.index + match[0].length + 200\r\n          );\r\n          const shortSentence = sermon.sermon.slice(\r\n            Math.max(0, match.index - 30),\r\n            match.index + match[0].length + 30\r\n          );\r\n\r\n          return {\r\n            id: sermon.id,\r\n            title: sermon.title,\r\n            year: sermon.year,\r\n            location: sermon.location,\r\n            shortSentence: shortSentence.replace(\r\n              regex,\r\n              `<highlight class='highlight'>${match[0]}</highlight>`\r\n            ),\r\n            fullContext: {\r\n              pre: preContext,\r\n              match: match[0],\r\n              post: postContext,\r\n            },\r\n            sermon: sermon.sermon,\r\n            type: sermon.type,\r\n          };\r\n        }\r\n        return null;\r\n      })\r\n      .filter(Boolean);\r\n\r\n    setSearchResults(filtered);\r\n    setExpandedResults({});\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // Prevent default form submission\r\n    handleRightSearch();\r\n  };\r\n\r\n  const handleSearchResultClick = (result) => {\r\n    const sermon = sermonCollection.find((s) => s.id === result.id);\r\n    setSelectedMessage(sermon);\r\n    setActiveTab(\"message\");\r\n    setSearchQuery(rightSearchText);\r\n\r\n    const recentSermons =\r\n      JSON.parse(localStorage.getItem(\"recentSermons\")) || [];\r\n    const updatedRecentSermons = recentSermons.filter(\r\n      (item) => item.id !== sermon.id\r\n    );\r\n    updatedRecentSermons.unshift(sermon);\r\n    const limitedRecentSermons = updatedRecentSermons.slice(0, 15);\r\n    localStorage.setItem(\"recentSermons\", JSON.stringify(limitedRecentSermons));\r\n    setRecentSermons(limitedRecentSermons);\r\n  };\r\n\r\n  const toggleExpanded = (resultId, event) => {\r\n    event.stopPropagation();\r\n    setExpandedResults((prev) => ({\r\n      ...prev,\r\n      [resultId]: !prev[resultId],\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"w-1/2 bg-opacity-50 bg-black backdrop-blur-sm flex flex-col \"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <div className=\"sticky top-0 bg-opacity-30 bg-primary p-8 z-10 backdrop-blur-lg rounded-b-md pt-10\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"flex items-end\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search quotes within all sermons\"\r\n              className=\"flex-grow p-2 text-lg border-b border-gray-300 focus:border-b-2 focus:border-gray-500 text-white placeholder-gray-300 bg-[transparent] outline-none\"\r\n              onChange={(e) => setRightSearchText(e.target.value)}\r\n              value={rightSearchText}\r\n              style={{ fontFamily: \"cursive\" }}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              icon={<SearchOutlined />}\r\n              className=\"ml-2 bg-green-600\"\r\n            >\r\n              Search\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"flex-grow overflow-y-auto scrollbar-hidden p-4\">\r\n        <p\r\n          className=\"text-center font-sans text-sm italic text-white mb-4\"\r\n          style={{ fontFamily: \"cursive\" }}\r\n        >\r\n          Search for quotes across all sermons preached by Robert Lambert Lee\r\n        </p>\r\n        {searchResults.map((result, index) => (\r\n          <div\r\n            key={`${result.id}-${index}`}\r\n            className=\"mb-4 p-3 bg-white bg-opacity-10 rounded-lg cursor-pointer hover:bg-opacity-20 transition-all\"\r\n            onClick={() => handleSearchResultClick(result)}\r\n          >\r\n            <h3 className=\"text-white font-bold mb-2 text-[.9rem] \">{result.title}</h3>\r\n            <div className=\"relative\">\r\n              {expandedResults[result.id] ? (\r\n                <div className=\"text-gray-300 text-sm\">\r\n                  <span className=\"opacity-70\">{result.fullContext.pre}</span>\r\n                  <highlight className=\"highlight\">\r\n                    {result.fullContext.match}\r\n                  </highlight>\r\n                  <span className=\"opacity-70\">{result.fullContext.post}</span>\r\n                </div>\r\n              ) : (\r\n                <p\r\n                  className=\"text-gray-300 text-sm\"\r\n                  dangerouslySetInnerHTML={{ __html: result.shortSentence }}\r\n                ></p>\r\n              )}\r\n              <button\r\n                className=\" right-0 bottom-0 flex items-center text-gray-300 hover:text-white transition-colors p-1 text-xs\"\r\n                onClick={(e) => toggleExpanded(result.id, e)}\r\n              >\r\n                {expandedResults[result.id] ? (\r\n                  <>\r\n                    <ChevronUp className=\"w-4 h-4 mr-1\" />\r\n                    Show Less\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <ChevronDown className=\"w-4 h-4 mr-1\" />\r\n                    Show More\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useContext, useState, useMemo } from 'react';\nimport { SermonContext } from '../Logic/SermonProvider';\nimport { Tooltip, Space } from 'antd';\nimport {\n  CalendarOutlined,\n  EnvironmentOutlined,\n  SortAscendingOutlined,\n  SortDescendingOutlined,\n  FontSizeOutlined,\n} from '@ant-design/icons';\nimport { LetterTextIcon } from 'lucide-react';\nimport Search from './Search.jsx';\n\nconst SermonList = () => {\n  const {\n    allSermons,\n    loading,\n    error,\n    setActiveTab,\n    setSelectedMessage,\n    setRecentSermons,\n  } = useContext(SermonContext);\n  const [searchText, setSearchText] = useState('');\n  const [sortKey, setSortKey] = useState('title');\n  const [sortOrder, setSortOrder] = useState('ascend');\n\n  const filteredSermons = useMemo(() => {\n    return allSermons.filter((sermon) =>\n      sermon.title.toString().toLowerCase().includes(searchText.toLowerCase())\n    );\n  }, [allSermons, searchText]);\n\n  const sortedSermons = useMemo(() => {\n    return [...filteredSermons].sort((a, b) => {\n      if (sortKey === 'year') {\n        return sortOrder === 'ascend' ? a.year - b.year : b.year - a.year;\n      }\n      return sortOrder === 'ascend'\n        ? a[sortKey].localeCompare(b[sortKey])\n        : b[sortKey].localeCompare(a[sortKey]);\n    });\n  }, [filteredSermons, sortKey, sortOrder]);\n\n  const handleSearch = (e) => {\n    setSearchText(e.target.value);\n  };\n\n  const handleSermonClick = (sermon) => {\n    setSelectedMessage(sermon);\n    setActiveTab('message');\n\n    const recentSermons =\n      JSON.parse(localStorage.getItem('recentSermons')) || [];\n    const updatedRecentSermons = recentSermons.filter(\n      (item) => item.id !== sermon.id\n    );\n    updatedRecentSermons.unshift(sermon);\n    const limitedRecentSermons = updatedRecentSermons.slice(0, 15);\n    localStorage.setItem('recentSermons', JSON.stringify(limitedRecentSermons));\n    setRecentSermons(limitedRecentSermons);\n  };\n\n  const handleSort = (key) => {\n    if (sortKey === key) {\n      setSortOrder(sortOrder === 'ascend' ? 'descend' : 'ascend');\n    } else {\n      setSortKey(key);\n      setSortOrder('ascend');\n    }\n  };\n\n  if (loading) return <div>Loading sermons...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div\n      className=\"flex min-h-screen font-sans bg-contain bg-center \"\n      style={{\n        backgroundImage: `\n          linear-gradient(to top, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.8) 20%, rgba(0, 0, 0, 0.1) 100%),\n          url('./icon.png')\n        `,\n      }}\n    >\n      {/* Left side - Sermon List */}\n      <div\n        className=\"w-1/2 overflow-y-auto scrollbar-hidden  \"\n        style={{ height: '100vh' }}\n      >\n        <div className=\"sticky top-0 bg-opacity-80 bg-primary px-4 py-2 z-10 backdrop-blur-sm rounded-b-md pt-10 \">\n          <h2 className=\"text-lg font-bold text-white mb-2\">Sermon List</h2>\n          <Space\n            className=\"mb-4\"\n            direction=\"vertical\"\n            style={{ width: '100%' }}\n          >\n            <input\n              placeholder=\"Search sermons\"\n              onChange={handleSearch}\n              className=\"flex-grow p-2 text-lg border-b border-gray-300 focus:border-b-2 focus:border-gray-500 text-white placeholder-gray-300 bg-[transparent] outline-none\"\n              style={{ width: '100%' }}\n              // prefix={<SearchOutlined className=\"text-gray-300\" />}\n            />\n            <Space className=\"w-full\">\n              <Tooltip title=\"Sort by Title\">\n                <button\n                  onClick={() => handleSort('title')}\n                  className={`p-2 rounded text-white ${\n                    sortKey === 'title' ? 'bg-white bg-opacity-30' : ''\n                  }`}\n                >\n                  <FontSizeOutlined />\n                  {sortKey === 'title' &&\n                    (sortOrder === 'ascend' ? (\n                      <SortAscendingOutlined />\n                    ) : (\n                      <SortDescendingOutlined />\n                    ))}\n                </button>\n              </Tooltip>\n              <Tooltip title=\"Sort by Year\">\n                <button\n                  onClick={() => handleSort('year')}\n                  className={`p-2 rounded text-white ${\n                    sortKey === 'year' ? 'bg-white bg-opacity-30' : ''\n                  }`}\n                >\n                  <CalendarOutlined />\n                  {sortKey === 'year' &&\n                    (sortOrder === 'ascend' ? (\n                      <SortAscendingOutlined />\n                    ) : (\n                      <SortDescendingOutlined />\n                    ))}\n                </button>\n              </Tooltip>\n              {/* <Tooltip title=\"Sort by Location\">\n                <button\n                  onClick={() => handleSort(\"location\")}\n                  className={`p-2 rounded text-white ${\n                    sortKey === \"location\" ? \"bg-white bg-opacity-30\" : \"\"\n                  }`}\n                >\n                  <EnvironmentOutlined />\n                  {sortKey === \"location\" &&\n                    (sortOrder === \"ascend\" ? (\n                      <SortAscendingOutlined />\n                    ) : (\n                      <SortDescendingOutlined />\n                    ))}\n                </button>\n              </Tooltip> */}\n            </Space>\n          </Space>\n        </div>\n        <div className=\"px-4 scrollbar-hidden pt-5 \">\n          {sortedSermons.map((sermon) => (\n            <div\n              key={sermon.id}\n              className=\"mb-4 border-b border-gray-500 pb-2 cursor-pointer hover:bg-[rgba(0,0,0,0.4)] \"\n              onClick={() => handleSermonClick(sermon)}\n            >\n              <p className=\"text-white text-[.8rem] font-medium\">{sermon.title}</p>\n              <div className=\"flex gap-3 text-gray-300\">\n                <p className=\"flex items-center text-xs font-mono\">\n                  <CalendarOutlined className=\"mr-1 text-blue-500\" />{' '}\n                  {sermon.year}\n                </p>\n                <p className=\"flex items-center text-xs font-mono\">\n                  <EnvironmentOutlined className=\"mr-1\" />{' '}\n                  {!sermon.location && 'N/A'}\n                </p>\n                <p className=\"flex items-center text-xs\">\n                  {sermon.type === 'mp3' ? '🔊' : <LetterTextIcon size={12} />}\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Right side - Advanced Search */}\n      <Search />\n    </div>\n  );\n};\n\nexport default SermonList;\n"],"names":["Search","setActiveTab","setSelectedMessage","setRecentSermons","setSearchQuery","useContext","SermonContext","rightSearchText","setRightSearchText","useState","searchResults","setSearchResults","expandedResults","setExpandedResults","sermonCollection","earlySermons","secondSet","thirdSet","fourthSet","lastSet","_jsxs","className","style","height","children","_jsx","onSubmit","e","preventDefault","handleRightSearch","filtered","map","sermon","regex","RegExp","concat","match","preContext","slice","Math","max","index","postContext","length","shortSentence","id","title","year","location","replace","fullContext","pre","post","type","filter","Boolean","placeholder","onChange","target","value","fontFamily","Button","icon","SearchOutlined","result","onClick","find","s","updatedRecentSermons","JSON","parse","localStorage","getItem","item","unshift","limitedRecentSermons","setItem","stringify","handleSearchResultClick","dangerouslySetInnerHTML","__html","toggleExpanded","resultId","stopPropagation","prev","_objectSpread","_Fragment","ChevronUp","ChevronDown","SermonList","allSermons","loading","error","searchText","setSearchText","sortKey","setSortKey","sortOrder","setSortOrder","filteredSermons","useMemo","toString","toLowerCase","includes","sortedSermons","sort","a","b","localeCompare","handleSort","key","backgroundImage","Space","direction","width","Tooltip","FontSizeOutlined","SortAscendingOutlined","SortDescendingOutlined","CalendarOutlined","handleSermonClick","EnvironmentOutlined","LetterTextIcon","size"],"sourceRoot":""}