{"version":3,"file":"static/js/83.5c854e6d.chunk.js","mappings":"4NAMA,MAAMA,EAAS,CACb,iBACA,iBACA,iBACA,iBAEA,iBACA,iBACA,iBACA,iBACA,kBACA,kBACA,eA6GF,EA1GgBC,KACd,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,IAC1CC,EAAaC,IAAkBF,EAAAA,EAAAA,WAAS,IACxCG,EAAiBC,IAAsBJ,EAAAA,EAAAA,UAAS,CAAEK,MAAO,EAAGC,OAAQ,KAU3EC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAwBA,KAC5B,MAAMH,EAA4B,GAApBI,OAAOC,WACfJ,EAA8B,GAArBG,OAAOE,YACtBP,EAAmB,CAAEC,QAAOC,UAAS,EAMvC,OAHAE,IACAC,OAAOG,iBAAiB,SAAUJ,GAE3B,KACLC,OAAOI,oBAAoB,SAAUL,EAAsB,CAC5D,GACA,IASH,OACEM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CACNC,eAVuB,CAC3BC,QAAS,EACT,KAAM,EACN,IAAK,EACL,IAAK,GAODL,UAAU,cACVM,gBAAgB,uBAAsBL,SAErCpB,EAAO0B,KAAI,CAACC,EAAKC,KAChBP,EAAAA,EAAAA,KAACQ,EAAAA,EAAOC,IAAG,CAETX,UAAU,OACVY,WAAY,CAAEC,MAAO,MACrBC,SAAU,CAAED,MAAO,KACnBE,QAASA,KACP/B,EAAgByB,GAChBtB,GAAe,EAAK,EACpBc,UAEFC,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CACJR,IAAKA,EACLS,IAAG,iBAAAC,OAAmBT,EAAQ,GAC9BT,UAAU,mCACVmB,SAAS,KAbNX,QAmBXN,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJC,QAASnC,EACToC,SAAUA,IAAMnC,GAAe,GAC/BoC,OAAQ,KACRjC,MAAOF,EAAgBE,MACvBkC,UAAW,CAAEjC,OAAQH,EAAgBG,OAAQkC,SAAU,SAAUC,gBAAgB,WACjFC,UAAQ,EAAA1B,UAERF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0DAAyDC,SAAA,EACtEC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAe,CAACC,SAAS,EAAM5B,UAC9BC,EAAAA,EAAAA,KAACQ,EAAAA,EAAOoB,IAAG,CAETtB,IAAK3B,EAAOE,GACZkC,IAAG,iBAAAC,OAAmBnC,EAAe,GACrCiB,UAAU,uCACV6B,QAAS,CAAEE,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjBG,WAAY,CAAEC,SAAU,KAPnBpD,MAUTmB,EAAAA,EAAAA,KAACQ,EAAAA,EAAO0B,OAAM,CACZpC,UAAU,kGACVY,WAAY,CAAEC,MAAO,KACrBC,SAAU,CAAED,MAAO,IACnBE,QA/EQsB,KAChBrD,GAAiBsD,IAAeA,EAAY,EAAIzD,EAAO0D,QAAU1D,EAAO0D,QAAO,EA8EpDtC,UAEnBC,EAAAA,EAAAA,KAACsC,EAAAA,EAAY,CAACxC,UAAU,gBAE1BE,EAAAA,EAAAA,KAACQ,EAAAA,EAAO0B,OAAM,CACZpC,UAAU,mGACVY,WAAY,CAAEC,MAAO,KACrBC,SAAU,CAAED,MAAO,IACnBE,QA3FQ0B,KAChBzD,GAAiBsD,IAAeA,EAAY,GAAKzD,EAAO0D,QAAO,EA0FpCtC,UAEnBC,EAAAA,EAAAA,KAACwC,EAAAA,EAAa,CAAC1C,UAAU,sBAI3B,C","sources":["components/Media.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { Image, Modal } from 'antd';\r\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons';\r\nimport Masonry from 'react-masonry-css';\r\n\r\nconst images = [\r\n  \"./gal/gal1.jpg\",\r\n  \"./gal/gal2.jpg\",\r\n  \"./gal/vog.jpeg\",\r\n  \"./gal/gal3.jpg\",\r\n  // /./ \"/gal/gal4.jpg\",\r\n  \"./gal/gal5.jpg\",\r\n  \"./gal/gal6.jpg\",\r\n  \"./gal/gal7.jpg\",\r\n  \"./gal/gal8.jpg\",\r\n  \"./gal/gal9.webp\",\r\n  \"./gal/gal10.jpg\",\r\n  \"./cloud.png\",\r\n];\r\n\r\nconst Gallery = () => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalDimensions, setModalDimensions] = useState({ width: 0, height: 0 });\r\n\r\n  const nextImage = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n  };\r\n\r\n  const prevImage = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex - 1 + images.length) % images.length);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updateModalDimensions = () => {\r\n      const width = window.innerWidth * 0.8;\r\n      const height = window.innerHeight * 0.8;\r\n      setModalDimensions({ width, height });\r\n    };\r\n\r\n    updateModalDimensions();\r\n    window.addEventListener('resize', updateModalDimensions);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', updateModalDimensions);\r\n    };\r\n  }, []);\r\n\r\n  const breakpointColumnsObj = {\r\n    default: 4,\r\n    1100: 3,\r\n    700: 2,\r\n    500: 1\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-8 bg-primary\">\r\n      <Masonry\r\n        breakpointCols={breakpointColumnsObj}\r\n        className=\"flex w-auto\"\r\n        columnClassName=\"bg-clip-padding px-2\"\r\n      >\r\n        {images.map((src, index) => (\r\n          <motion.div\r\n            key={src}\r\n            className=\"mb-4\"\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n            onClick={() => {\r\n              setCurrentIndex(index);\r\n              setIsModalOpen(true);\r\n            }}\r\n          >\r\n            <Image\r\n              src={src}\r\n              alt={`Gallery image ${index + 1}`}\r\n              className=\"w-full rounded-lg cursor-pointer\"\r\n              preview={false}\r\n            />\r\n          </motion.div>\r\n        ))}\r\n      </Masonry>\r\n\r\n      <Modal\r\n        visible={isModalOpen}\r\n        onCancel={() => setIsModalOpen(false)}\r\n        footer={null}\r\n        width={modalDimensions.width}\r\n        bodyStyle={{ height: modalDimensions.height, overflow: 'hidden', backgroundColor:'#202020' }}\r\n        centered\r\n      >\r\n        <div className=\"relative w-full h-full flex items-center justify-center\">\r\n          <AnimatePresence initial={false}>\r\n            <motion.img\r\n              key={currentIndex}\r\n              src={images[currentIndex]}\r\n              alt={`Gallery image ${currentIndex + 1}`}\r\n              className=\"max-w-full max-h-full object-contain\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              exit={{ opacity: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n            />\r\n          </AnimatePresence>\r\n          <motion.button\r\n            className=\"absolute top-1/2 left-4 transform -translate-y-1/2 bg-white bg-opacity-50 rounded-full p-2 z-10\"\r\n            whileHover={{ scale: 1.1 }}\r\n            whileTap={{ scale: 0.9 }}\r\n            onClick={prevImage}\r\n          >\r\n            <LeftOutlined className=\"text-2xl\" />\r\n          </motion.button>\r\n          <motion.button\r\n            className=\"absolute top-1/2 right-4 transform -translate-y-1/2 bg-white bg-opacity-50 rounded-full p-2 z-10\"\r\n            whileHover={{ scale: 1.1 }}\r\n            whileTap={{ scale: 0.9 }}\r\n            onClick={nextImage}\r\n          >\r\n            <RightOutlined className=\"text-2xl\" />\r\n          </motion.button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;"],"names":["images","Gallery","currentIndex","setCurrentIndex","useState","isModalOpen","setIsModalOpen","modalDimensions","setModalDimensions","width","height","useEffect","updateModalDimensions","window","innerWidth","innerHeight","addEventListener","removeEventListener","_jsxs","className","children","_jsx","Masonry","breakpointCols","default","columnClassName","map","src","index","motion","div","whileHover","scale","whileTap","onClick","Image","alt","concat","preview","Modal","visible","onCancel","footer","bodyStyle","overflow","backgroundColor","centered","AnimatePresence","initial","img","opacity","animate","exit","transition","duration","button","prevImage","prevIndex","length","LeftOutlined","nextImage","RightOutlined"],"sourceRoot":""}